<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~
  ~      Copyright (c) 2018-2025, kbopark All rights reserved.
  ~
  ~  Redistribution and use in source and binary forms, with or without
  ~  modification, are permitted provided that the following conditions are met:
  ~
  ~ Redistributions of source code must retain the above copyright notice,
  ~  this list of conditions and the following disclaimer.
  ~  Redistributions in binary form must reproduce the above copyright
  ~  notice, this list of conditions and the following disclaimer in the
  ~  documentation and/or other materials provided with the distribution.
  ~  Neither the name of the pig4cloud.com developer nor the names of its
  ~  contributors may be used to endorse or promote products derived from
  ~  this software without specific prior written permission.
  ~  Author: kbopark
  ~
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.qdzhhl.kbopark.admin.mapper.SysUserMapper">
	<!-- 通用查询映射结果 -->
	<resultMap id="baseResultMap" type="cn.qdzhhl.kbopark.admin.api.vo.UserVO">
		<id column="user_id" property="userId"/>
		<result column="username" property="username"/>
		<result column="real_name" property="realName"/>
		<result column="password" property="password"/>
		<result column="salt" property="salt"/>
		<result column="phone" property="phone"/>
		<result column="email" property="email"/>
		<result column="avatar" property="avatar"/>
		<result column="wx_openid" property="wxOpenid"/>
		<result column="qq_openid" property="qqOpenid"/>
		<result column="ucreate_time" property="createTime"/>
		<result column="uupdate_time" property="updateTime"/>
		<result column="lock_flag" property="lockFlag"/>
		<result column="udel_flag" property="delFlag"/>
		<result column="dept_id" property="deptId"/>
		<result column="merchant_id" property="merchantId"/>
		<result column="user_type" property="userType"/>
		<result column="promote_code" property="promoteCode"/>
		<result column="tenant_id" property="tenantId"/>
		<result column="dept_name" property="deptName"/>
		<collection property="roleList" ofType="cn.qdzhhl.kbopark.admin.api.entity.SysRole"
					select="cn.qdzhhl.kbopark.admin.mapper.SysRoleMapper.listRolesByUserId" column="user_id">
		</collection>
	</resultMap>

	<!-- userVo结果集 -->
	<resultMap id="userVoResultMap" type="cn.qdzhhl.kbopark.admin.api.vo.UserVO">
		<id column="user_id" property="userId"/>
		<result column="username" property="username"/>
		<result column="real_name" property="realName"/>
		<result column="password" property="password"/>
		<result column="salt" property="salt"/>
		<result column="phone" property="phone"/>
		<result column="email" property="email"/>
		<result column="avatar" property="avatar"/>
		<result column="wx_openid" property="wxOpenid"/>
		<result column="qq_openid" property="qqOpenid"/>
		<result column="ucreate_time" property="createTime"/>
		<result column="uupdate_time" property="updateTime"/>
		<result column="lock_flag" property="lockFlag"/>
		<result column="udel_flag" property="delFlag"/>
		<result column="dept_id" property="deptId"/>
		<result column="merchant_id" property="merchantId"/>
		<result column="user_type" property="userType"/>
		<result column="promote_code" property="promoteCode"/>
		<result column="tenant_id" property="tenantId"/>
		<result column="dept_name" property="deptName"/>
		<collection property="roleList" ofType="cn.qdzhhl.kbopark.admin.api.entity.SysRole">
			<id column="role_id" property="roleId"/>
			<result column="role_name" property="roleName"/>
			<result column="role_code" property="roleCode"/>
			<result column="role_desc" property="roleDesc"/>
			<result column="rcreate_time" property="createTime"/>
			<result column="rupdate_time" property="updateTime"/>
		</collection>
	</resultMap>

	<sql id="userRoleSql">
		u.user_id,
		u.username,
		u.real_name,
		u.password,
		u.salt,
		u.phone,
		u.email,
		u.avatar,
		u.wx_openid,
		u.qq_openid,
		u.dept_id,
		u.merchant_id,
		u.user_type,
		u.promote_code,
		u.del_flag,
		u.lock_flag,
		u.tenant_id,
		u.create_time  ucreate_time,
		u.update_time  uupdate_time,
		r.role_id,
		r.role_name,
		r.role_code,
		r.role_desc,
		r.create_time  rcreate_time,
		r.update_time  rupdate_time
	</sql>

	<sql id="userRoleDeptSql">
		u.user_id,
		u.username,
		u.real_name,
		u.password,
		u.salt,
		u.phone,
		u.email,
		u.avatar,
		u.wx_openid,
		u.qq_openid,
		u.del_flag,
		u.lock_flag,
		u.tenant_id,
		u.merchant_id,
		u.user_type,
		u.promote_code,
		u.create_time  ucreate_time,
		u.update_time  uupdate_time,
		r.role_id,
		r.role_name,
		r.role_code,
		r.role_desc,
		r.create_time  rcreate_time,
		r.update_time  rupdate_time,
		d.name  dept_name,
		d.dept_id
    </sql>

	<select id="getUserVoByUsername" resultMap="userVoResultMap">
		SELECT
			<include refid="userRoleSql"/>
		FROM
		sys_user  u
		LEFT JOIN sys_user_role  ur ON ur.user_id = u.user_id
		LEFT JOIN sys_role  r ON r.role_id = ur.role_id
			WHERE u.username = #{username}
	</select>

	<select id="getUserVoById" resultMap="userVoResultMap">
        SELECT
	   		<include refid="userRoleDeptSql"/>
        FROM
            sys_user  u
            LEFT JOIN sys_user_role  ur ON ur.user_id = u.user_id
            LEFT JOIN sys_role  r ON r.role_id = ur.role_id
            LEFT JOIN sys_dept  d ON d.dept_id = u.dept_id
        WHERE
           u.user_id = #{id}
    </select>

	<select id="getUserVosPage" resultMap="baseResultMap">
		SELECT
		u.user_id,
		u.username,
		u.real_name,
		u.password,
		u.salt,
		u.phone,
		u.avatar,
		u.email,
		u.wx_openid,
		u.qq_openid,
		u.dept_id,
		u.merchant_id,
		u.user_type,
		u.promote_code,
		u.create_time  ucreate_time,
		u.update_time  uupdate_time,
		u.del_flag,
		u.lock_flag,
		u.tenant_id,
		 d.name  dept_name
		FROM
		sys_user  u
		LEFT JOIN sys_dept  d ON d.dept_id = u.dept_id
		<where>
			u.del_flag = '0'
			<if test="query.username != null and query.username != ''">
				AND u.username LIKE CONCAT('%',#{query.username},'%')
			</if>
			<if test="query.deptId != null and query.deptId != ''">
				AND u.dept_id = #{query.deptId}
			</if>
			<if test="query.limitDeptId != null and query.limitDeptId != ''">
				AND (d.dept_id = #{query.limitDeptId} or d.parent_id = #{query.limitDeptId})
			</if>
			<if test="query.userType != null and query.userType != ''">
				AND u.user_type = #{query.userType}
			</if>
			<if test="query.byMerchantId">
				AND u.merchant_id IS NOT NULL
			</if>
		</where>
		ORDER BY u.create_time DESC
	</select>
</mapper>
